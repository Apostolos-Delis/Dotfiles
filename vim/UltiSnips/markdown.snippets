priority -50

global !p
def create_table(snip):
    # retrieving single line from current string and treat it like tabstops count
    placeholders_string = snip.buffer[snip.line].strip()[2:].split("x",1)
    rows_amount = int(placeholders_string[0])
    columns_amount = int(placeholders_string[1])

    # erase current line
    snip.buffer[snip.line] = ''

    # create anonymous snippet with expected content and number of tabstops
    anon_snippet_title = ' | '.join(['$' + str(col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_delimiter = ':-|' * (columns_amount-1) + ":-\n"
    anon_snippet_body = ""
    for row in range(1,rows_amount+1):
        anon_snippet_body += ' | '.join(['$' + str(row*columns_amount+col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body

    # expand anonymous snippet
    snip.expand_anon(anon_snippet_table)
endglobal

snippet python "Python block" b

\`\`\`python
${1:code}
\`\`\`
endsnippet

snippet bl "bold text"
**${1:${VISUAL}}**$0
endsnippet

snippet un "underlined text" i
<u>${1:text}</u>$0
endsnippet

snippet link "Insert Link" b
[${1:name}](http://www.${2:google}.com)
endsnippet

snippet img "image insert" bs

![${2}](images/${1:image_name}.png){ width=50% }
endsnippet 

snippet bash "bash script" b

\`\`\`bash
${1:code}
\`\`\`
endsnippet


snippet table "table"
| ${1:Items}    | ${2:Values}   | 
| ------------- |:-------------:|
| ...           | ...           | 
endsnippet

snippet cc "C code" sb

\`\`\`c
${1:code}
\`\`\`
endsnippet

snippet ml "Ocaml code" bs

\`\`\`ocaml
${1:code}
\`\`\`
endsnippet

snippet sql "sql code" sb

\`\`\`sql
${1:SELECT }
\`\`\`
endsnippet

snippet java "java code" bs

\`\`\`java
${1:public static void main(string args[])}
\`\`\`
endsnippet

snippet cd "generic coding snippet" bs

\`\`\`${1:language}
${2}
\`\`\`
endsnippet

snippet math "Insert Equation" b
\begin{equation}
${1:math}
\end{equation}
endsnippet

snippet chap "Chapter Starter"
### Chapter ${1:Title}

${0}
endsnippet

snippet date "date" 
`date +'%Y-%m-%d'`
endsnippet

snippet nt "Note" 
**Note**: ${0}
endsnippet

pre_expand "create_table(snip)"
snippet "tb(\d+x\d+)" "Customizable table" br
endsnippet
